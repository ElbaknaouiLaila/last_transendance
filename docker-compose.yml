version: '3.8'

services:
  frontend:
    container_name: front
    depends_on:
      - backend
      - database
    build:
      context: ./front
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    environment:
      NODE_ENV: production
    networks:
      - networkwork

  backend:
    container_name: backend
    build:
      context: ./back
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    networks:
      - networkwork

  database:
    image: postgres:latest
    container_name: database
    ports:
      - "5434:5432"
    environment:
      POSTGRES_USER: your_database_user
      POSTGRES_PASSWORD: your_database_password
      POSTGRES_DB: your_database_name
    networks:
      - networkwork

networks:
  networkwork:
    driver: bridge
# version: '3.8'
# services:
#   db:
#     image: postgres:latest
#     container_name: pingpong_db
#     restart: always
#     ports:
#       - "5434:5432"
#     env_file:
#       - ./back/.env
#     environment:
#       - POSTGRES_USER=${POSTGRES_USER}
#       - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
#       - POSTGRES_DB=${POSTGRES_DB}
#     networks:
#       - networkwork

#   backend:
#     build: ./back
#     image: backend
#     container_name: backend
#     restart: unless-stopped
#     ports:
#       - "3000:3000"
#     env_file:
#       - ./back/.env
#     depends_on:
#       - db
#     networks:
#       - networkwork

#   frontend:
#     build: ./front
#     image: frontend
#     container_name: frontend
#     restart: unless-stopped
#     ports:
#       - "5173:5173"
#     env_file:
#       - ./back/.env
#     depends_on:
#       - backend
#     networks:
#       - networkwork

# networks:
#   networkwork:
#     driver: bridge
